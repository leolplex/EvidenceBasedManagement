name: .NET

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test      
      run: dotnet test --settings coverlet.runsettings --logger trx
  
  sonarCloudIdentity:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: SonarCloud Scan
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        cd services/Identity/EBM.Identity   
        dotnet restore     
        dotnet build --no-restore
        cd services/Identity/test/EBM.Identity.Test   
        dotnet test --settings coverlet.runsettings --logger trx
        dotnet tool install --global dotnet-sonarscanner
        dotnet sonarscanner begin /k:"EBM.Identity" /o:"leolplex" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" -d:sonar.cs.opencover.reportsPaths="TestResults\*\coverage.opencover.xml" -d:sonar.cs.vstest.reportsPaths="TestResults\*.trx"
        dotnet build
        dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
  
  sonarCloudIterations:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: SonarCloud Scan
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        cd services/Iterations/EBM.Iterations
        dotnet restore     
        dotnet build --no-restore
        cd services/Identity/test/EBM.Iterations.Test 
        dotnet test --settings coverlet.runsettings --logger trx
        dotnet tool install --global dotnet-sonarscanner
        dotnet sonarscanner begin /k:"EBM.Iterations" /o:"leolplex" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" -d:sonar.cs.opencover.reportsPaths="TestResults\*\coverage.opencover.xml" -d:sonar.cs.vstest.reportsPaths="TestResults\*.trx"
        dotnet build
        dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

